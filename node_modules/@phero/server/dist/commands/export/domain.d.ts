import ts from "typescript";
export interface RawExportFile {
    name: string;
    nodes: ts.Node[];
    isRoot?: boolean;
}
export interface Export {
    bundles: ExportBundle[];
    otherFiles?: ExportFile[];
}
export interface ExportBundle {
    name: string;
    files: ExportFile[];
}
export interface ExportFile {
    name: string;
    content: string;
}
export declare enum MetaExportLockFileName {
    Npm = "package-lock.json",
    Yarn = "yarn.lock",
    Pnpm = "pnpm-lock.yaml"
}
declare type MetaExportFileContent = string;
export interface MetaExportFilesBase {
    "phero-manifest.d.ts": MetaExportFileContent;
    "phero-execution.js": MetaExportFileContent;
    "phero.js": MetaExportFileContent;
    "package.json": MetaExportFileContent;
}
export declare type MetaExportFiles = MetaExportFilesBase & ({
    [MetaExportLockFileName.Npm]: MetaExportFileContent;
} | {
    [MetaExportLockFileName.Yarn]: MetaExportFileContent;
} | {
    [MetaExportLockFileName.Pnpm]: MetaExportFileContent;
});
export {};
