"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateCreateAndStartServer = exports.writeResponseStatement = exports.write404ResponseStatement = void 0;
const core_1 = require("@phero/core");
function write404ResponseStatement() {
    return writeResponseStatement(core_1.tsx.literal.object(core_1.tsx.property.assignment("status", core_1.tsx.literal.number(404)), core_1.tsx.property.assignment("error", core_1.tsx.literal.string("RPC Not Found"))));
}
exports.write404ResponseStatement = write404ResponseStatement;
function writeResponseStatement(expression) {
    return core_1.tsx.statement.expression(core_1.tsx.expression.call("writeResponse", {
        args: ["originWhitelist", expression, "res", "req"],
    }));
}
exports.writeResponseStatement = writeResponseStatement;
function generateCreateAndStartServer() {
    return core_1.tsx.verbatim(`const PORT = process.env.PORT ?? 2222
  createServer(requestListener)
    .listen(PORT)
    .on("listening", () =>
      console.info(\`Phero started listening on port \${PORT}\`),
    )
`);
}
exports.generateCreateAndStartServer = generateCreateAndStartServer;
