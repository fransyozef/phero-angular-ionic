export declare const DEFAULT_SERVER_PORT = 3030;
export declare const DEFAULT_SERVER_URL: string;
export declare const DEFAULT_CLIENT_PORT = 4040;
export declare enum ServerCommandName {
    Version = "version",
    Help = "help",
    Serve = "serve",
    Export = "export",
    Build = "build"
}
export interface ServerCommandVersion {
    name: ServerCommandName.Version;
}
export interface ServerCommandHelp {
    name: ServerCommandName.Help;
    command?: ServerCommandName;
}
export interface ServerCommandServe {
    name: ServerCommandName.Serve;
    verbose: boolean;
    port: number;
}
export interface ServerCommandExport {
    name: ServerCommandName.Export;
    flavor: ServerExportFlavor;
    verbose: boolean;
}
export declare enum ServerExportFlavor {
    NodeJS = "nodejs",
    GCloudFunctions = "gcloud-functions",
    Vercel = "vercel"
}
export interface ServerCommandBuild {
    name: ServerCommandName.Build;
    verbose: boolean;
}
export declare type ServerCommand = ServerCommandVersion | ServerCommandHelp | ServerCommandServe | ServerCommandExport | ServerCommandBuild;
export declare enum ClientCommandName {
    Version = "version",
    Help = "help",
    Watch = "watch",
    Build = "build"
}
export interface ClientCommandVersion {
    name: ClientCommandName.Version;
}
export interface ClientCommandHelp {
    name: ClientCommandName.Help;
    command?: ClientCommandName;
}
interface ClientServerLocationUrl {
    url: string;
}
interface ClientServerLocationPath {
    path: string;
}
export declare type ClientServerLocation = ClientServerLocationUrl | ClientServerLocationPath;
export interface ClientCommandWatch {
    name: ClientCommandName.Watch;
    verbose: boolean;
    port: number;
    server: ClientServerLocationUrl;
}
export interface ClientCommandBuild {
    name: ClientCommandName.Build;
    verbose: boolean;
    server: ClientServerLocation;
}
export declare type ClientCommand = ClientCommandVersion | ClientCommandHelp | ClientCommandWatch | ClientCommandBuild;
export declare enum PheroCommandName {
    Version = "version",
    Help = "help",
    Server = "server",
    Client = "client",
    DevEnv = "dev-env",
    Init = "init"
}
export interface PheroCommandVersion {
    name: PheroCommandName.Version;
}
export interface PheroCommandHelp {
    name: PheroCommandName.Help;
    command?: PheroCommandName;
}
export interface PheroCommandServer {
    name: PheroCommandName.Server;
    argv: string[];
}
export interface PheroCommandClient {
    name: PheroCommandName.Client;
    argv: string[];
}
export interface PheroCommandDevEnv {
    name: PheroCommandName.DevEnv;
    verbose: boolean;
}
export interface PheroCommandInit {
    name: PheroCommandName.Init;
    env?: "client" | "server";
}
export declare type PheroCommand = PheroCommandVersion | PheroCommandHelp | PheroCommandServer | PheroCommandClient | PheroCommandDevEnv | PheroCommandInit;
export declare function parseServerCommand(argv: string[]): ServerCommand;
export declare function parseClientCommand(argv: string[]): ClientCommand;
export declare function parsePheroCommand(argv: string[]): PheroCommand;
export {};
