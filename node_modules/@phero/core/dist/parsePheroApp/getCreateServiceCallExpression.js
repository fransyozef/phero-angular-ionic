"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const typescript_1 = __importDefault(require("typescript"));
const tsUtils_1 = require("../tsUtils");
function getCreateServiceCallExpression(node, typeChecker) {
    var _a;
    if (!node) {
        return;
    }
    if (typescript_1.default.isCallExpression(node) &&
        typescript_1.default.isIdentifier(node.expression) &&
        node.expression.text === "createService") {
        return node;
    }
    if (typescript_1.default.isPropertyAssignment(node)) {
        return getCreateServiceCallExpression(node.initializer, typeChecker);
    }
    if (typescript_1.default.isIdentifier(node)) {
        const symbol = (0, tsUtils_1.resolveSymbol)(node, typeChecker);
        if (symbol) {
            return getCreateServiceCallExpression(symbol.valueDeclaration, typeChecker);
        }
    }
    if (typescript_1.default.isVariableDeclaration(node)) {
        return getCreateServiceCallExpression(node.initializer, typeChecker);
    }
    if (typescript_1.default.isPropertyAccessExpression(node)) {
        return getCreateServiceCallExpression(node.getLastToken(), typeChecker);
    }
    if (typescript_1.default.isExportSpecifier(node)) {
        return getCreateServiceCallExpression((_a = node.propertyName) !== null && _a !== void 0 ? _a : node.name, typeChecker);
    }
    if (typescript_1.default.isShorthandPropertyAssignment(node)) {
        const symbol = typeChecker.getShorthandAssignmentValueSymbol(node);
        if (!symbol || !symbol.valueDeclaration) {
            return undefined;
        }
        return getCreateServiceCallExpression(symbol.valueDeclaration, typeChecker);
    }
}
exports.default = getCreateServiceCallExpression;
