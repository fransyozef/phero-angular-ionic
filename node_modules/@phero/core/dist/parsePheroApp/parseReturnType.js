"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const typescript_1 = __importDefault(require("typescript"));
const errors_1 = require("../errors");
function parseReturnType(node) {
    var _a;
    const typeNode = node.type;
    if (!typeNode) {
        throw new errors_1.ParseError("S121: Return type should be explicitly defined", node);
    }
    if (typescript_1.default.isTypeReferenceNode(typeNode)) {
        const promisedType = (_a = typeNode.typeArguments) === null || _a === void 0 ? void 0 : _a[0];
        if (typeNode.typeName.getText() === "Promise" && promisedType) {
            return promisedType;
        }
    }
    throw new errors_1.ParseError("S122: Return type should be a Promise<T>", typeNode);
}
exports.default = parseReturnType;
