"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const typescript_1 = __importDefault(require("typescript"));
const errors_1 = require("../errors");
const parseServiceMiddlewareConfig_1 = __importDefault(require("./parseServiceMiddlewareConfig"));
const tsUtils_1 = require("../tsUtils");
function parseServiceConfig(node, typeChecker) {
    if (!node) {
        return {};
    }
    if (typescript_1.default.isObjectLiteralExpression(node)) {
        const middleware = (0, parseServiceMiddlewareConfig_1.default)(node, "middleware", typeChecker);
        return { middleware };
    }
    if (typescript_1.default.isIdentifier(node)) {
        const symbol = (0, tsUtils_1.resolveSymbol)(node, typeChecker);
        if (symbol) {
            return parseServiceConfig(symbol.valueDeclaration, typeChecker);
        }
    }
    if (typescript_1.default.isVariableDeclaration(node)) {
        return parseServiceConfig(node.initializer, typeChecker);
    }
    throw new errors_1.ParseError("S126: Unsupport syntax for function config", node);
}
exports.default = parseServiceConfig;
