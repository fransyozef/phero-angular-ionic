import ts from "typescript";
export declare class Literal {
    static get null(): ts.NullLiteral;
    static get undefined(): ts.Identifier;
    static number(value: number): ts.NumericLiteral;
    static string(value: string): ts.StringLiteral;
    static get true(): ts.TrueLiteral;
    static get false(): ts.FalseLiteral;
    static boolean(value: boolean): ts.BooleanLiteral;
    static object(...props: (ts.PropertyAssignment | ts.ShorthandPropertyAssignment | ts.SpreadAssignment)[]): ts.ObjectLiteralExpression;
    static array(...elements: ts.Expression[]): ts.ArrayLiteralExpression;
    static type(...members: ts.PropertySignature[]): ts.TypeLiteralNode;
    static function(props: {
        params: ts.ParameterDeclaration[];
        type: ts.TypeNode;
        typeParams?: ts.TypeParameterDeclaration[];
    }): ts.FunctionTypeNode;
    static regularExpression(text: string): ts.RegularExpressionLiteral;
}
