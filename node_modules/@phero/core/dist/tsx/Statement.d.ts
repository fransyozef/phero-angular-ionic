import ts from "typescript";
import { block } from "./block";
import { constDeclaration } from "./const";
import { simpleForOver } from "./for";
import { switchStatement } from "./switch";
export declare class Statement {
    static if(props: {
        expression: ts.Expression;
        then: ts.Statement;
        else?: ts.Statement;
    }): ts.IfStatement;
    static try(props: {
        block: ts.Block | ts.Statement[];
        catch: {
            error: string;
            block?: ts.Block | ts.Statement[];
        };
        finally?: ts.Block | ts.Statement[];
    }): ts.TryStatement;
    static block: typeof block;
    static const: typeof constDeclaration;
    static return(expression?: ts.Expression): ts.ReturnStatement;
    static expression(expression: ts.Expression): ts.ExpressionStatement;
    static throw(expression: ts.Expression): ts.ThrowStatement;
    static simpleForOver: typeof simpleForOver;
    static switch: typeof switchStatement;
    static get break(): ts.BreakStatement;
}
