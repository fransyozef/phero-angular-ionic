import ts from "typescript";
import { typeReference } from "./typeReference";
export declare class Type {
    static get any(): ts.TypeNode;
    static get boolean(): ts.TypeNode;
    static get string(): ts.TypeNode;
    static get number(): ts.TypeNode;
    static get undefined(): ts.TypeNode;
    static get void(): ts.TypeNode;
    static get never(): ts.TypeNode;
    static array(elementType: ts.TypeNode): ts.ArrayTypeNode;
    static union(...types: ts.TypeNode[]): ts.UnionTypeNode;
    static intersection(...types: ts.TypeNode[]): ts.IntersectionTypeNode;
    static literalType(literal: ts.LiteralExpression | ts.NullLiteral | ts.BooleanLiteral | ts.PrefixUnaryExpression): ts.LiteralTypeNode;
    static reference: typeof typeReference;
}
