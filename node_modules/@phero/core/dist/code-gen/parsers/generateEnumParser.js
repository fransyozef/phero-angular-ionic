"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const typescript_1 = __importDefault(require("typescript"));
const generateParserLib_1 = require("./generateParserLib");
const generateParserModel_1 = require("./generateParserModel");
function generateEnumParser(pointer) {
    return typescript_1.default.factory.createIfStatement(generateEnumValidator(pointer), (0, generateParserLib_1.generatePushErrorExpressionStatement)(pointer.errorPath, "not a member of enum"), (0, generateParserLib_1.assignDataToResult)(pointer.resultVarExpr, pointer.dataVarExpr));
}
exports.default = generateEnumParser;
function generateEnumValidator(pointer) {
    const acceptedValues = pointer.model.members.reduce((result, member) => {
        if (member.type === generateParserModel_1.ParserModelType.StringLiteral) {
            return [...result, typescript_1.default.factory.createStringLiteral(member.literal)];
        }
        else if (member.type === generateParserModel_1.ParserModelType.NumberLiteral) {
            return [...result, typescript_1.default.factory.createNumericLiteral(member.literal)];
        }
        else {
            return result;
        }
    }, []);
    return typescript_1.default.factory.createPrefixUnaryExpression(typescript_1.default.SyntaxKind.ExclamationToken, typescript_1.default.factory.createCallExpression(typescript_1.default.factory.createPropertyAccessExpression(typescript_1.default.factory.createArrayLiteralExpression(acceptedValues, false), typescript_1.default.factory.createIdentifier("includes")), undefined, [pointer.dataVarExpr]));
}
