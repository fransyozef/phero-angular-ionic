"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const typescript_1 = __importDefault(require("typescript"));
const generateParserFromModel_1 = __importDefault(require("./generateParserFromModel"));
const generateParserLib_1 = require("./generateParserLib");
function generateObjectParser(pointer) {
    return typescript_1.default.factory.createIfStatement(generateObjectValidator(pointer), (0, generateParserLib_1.generatePushErrorExpressionStatement)(pointer.errorPath, "null or not an object"), typescript_1.default.factory.createBlock([
        (0, generateParserLib_1.assignDataToResult)(pointer.resultVarExpr, typescript_1.default.factory.createObjectLiteralExpression([], false)),
        ...pointer.model.members.map((member) => (0, generateParserFromModel_1.default)(member, pointer.path)),
    ]));
}
exports.default = generateObjectParser;
function generateObjectValidator(pointer) {
    return typescript_1.default.factory.createBinaryExpression(typescript_1.default.factory.createBinaryExpression(typescript_1.default.factory.createTypeOfExpression(pointer.dataVarExpr), typescript_1.default.factory.createToken(typescript_1.default.SyntaxKind.ExclamationEqualsEqualsToken), typescript_1.default.factory.createStringLiteral("object")), typescript_1.default.factory.createToken(typescript_1.default.SyntaxKind.BarBarToken), typescript_1.default.factory.createBinaryExpression(pointer.dataVarExpr, typescript_1.default.factory.createToken(typescript_1.default.SyntaxKind.EqualsEqualsEqualsToken), typescript_1.default.factory.createNull()));
}
