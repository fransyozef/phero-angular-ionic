"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const parseThrowStatement_1 = __importDefault(require("./parseThrowStatement"));
const recursivelyFindThrowStatements_1 = __importDefault(require("./recursivelyFindThrowStatements"));
function extractErrors(functions, typeChecker) {
    const throwStatements = (0, recursivelyFindThrowStatements_1.default)(functions, typeChecker);
    const parsedErrors = throwStatements
        .map((st) => (0, parseThrowStatement_1.default)(st, typeChecker))
        .filter((x) => !!x);
    return deduplicateErrors(parsedErrors);
}
exports.default = extractErrors;
function deduplicateErrors(parsedErrors) {
    const result = [];
    const done = [];
    for (const parsedError of parsedErrors) {
        if (done.includes(parsedError.ref)) {
            continue;
        }
        result.push(parsedError);
        done.push(parsedError.ref);
    }
    return result;
}
